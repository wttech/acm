name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  publish:
    name: Deploy to GitHub Packages
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - name: Extract Version
        id: extract_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_ENV

      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: 8
          distribution: temurin

      - name: Publish package
        run: sh ./mvnw --batch-mode deploy -Dversion=${{ env.VERSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Draft Release
        id: draft_release
        uses: release-drafter/release-drafter@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: ${{ steps.draft_release.outputs.body }}
          draft: false
          prerelease: false

      - name: Upload All Package
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: all/target/acm.all-${{ env.VERSION }}.zip
          asset_name: acm.all-${{ env.VERSION }}.zip
          asset_content_type: application/zip

      - name: Upload Minimal Package
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: min/target/acm.min-${{ env.VERSION }}.zip
          asset_name: acm.min-${{ env.VERSION }}.zip
          asset_content_type: application/zip