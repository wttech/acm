group: Condition
name: condition_is_date
content: |
  conditions.isDate(${1:date})
documentation: |
  Execute the script on a specific date.

  The date can be provided as a string in one of the following formats:
  
    - **yyyy-MM-dd HH:mm:ss**: `conditions.isDate("2025-04-16 12:30:00")`
    - **yyyy-MM-dd'T'HH:mm:ss**: `conditions.isDate("2025-04-16T12:30:00")`
    - **yyyy-MM-dd'T'HH:mm:ss.SSSXXX**: `conditions.isDate("2025-04-16T12:30:00.123+02:00")`
    - **yyyy-MM-dd'T'HH:mm:ssXXX**: `conditions.isDate("2025-04-16T12:30:00+02:00")`
    
    If the date string does not include timezone information, the server assumes the date is in its default timezone. In such cases, the date is adjusted to match the server's timezone if there is a discrepancy.
  
  Alternatively, you can provide a `ZonedDateTime` or `LocalDateTime` object, such as:
    `conditions.isDate(ZonedDateTime.of(2025, 12, 25, 10, 0, 0, 0, ZoneId.of("Europe/Warsaw")))`.
    
    Using `ZonedDateTime` is recommended for precise timezone handling, as it avoids ambiguity and ensures accurate date interpretation.
    
    **Note:** The script scheduler operates at regular intervals (default: 30 seconds). The provided date must be in the future and fall within the range of the current time and the next scheduler interval.
    For example, if the current time is `12:00:00` and the scheduler runs every 30 seconds, the date must be between `12:00:00` and `12:00:30` (inclusive) to meet the condition.
