name: Test

on:
  workflow_dispatch:
  workflow_call:
    secrets:
      AWS_ACCESS_KEY_ID:
        required: true
      AWS_SECRET_ACCESS_KEY:
        required: true
      AWS_REGION:
        required: true
      AWS_S3_BUCKET_NAME:
        required: true

jobs:
  build:
    name: 'Build ACM Package'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          java-version: '8'
          distribution: 'temurin'
          cache: 'maven'

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        if: always()
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build Code
        run: mvn -B clean package verify

      - name: Upload ACM Package Artifact
        uses: actions/upload-artifact@v4
        with:
          name: acm-package
          path: all/target/*.zip
          retention-days: 3

  test:
    name: 'Test ACM Package'
    runs-on: ubuntu-latest
    needs: build
    timeout-minutes: 60
    permissions:
      contents: read
      actions: read
      checks: write
    env:
      AEM_OUTPUT_LOG_MODE: none
      FORCE_COLOR: 1
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
      
      - name: Setup NodeJS Runtime
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          cache: 'npm'
          cache-dependency-path: './test/e2e/package-lock.json'

      - name: Setup NodeJS Dependencies
        working-directory: ./test/e2e
        run: npm ci

      - name: Install Playwright Browsers
        working-directory: ./test/e2e
        run: npx playwright install --with-deps chromium

      - name: Download ACM Package Artifact
        uses: actions/download-artifact@v4
        with:
          name: acm-package
          path: ./aem/home/lib/acm

      - name: Setup AEM Instance
        run: |
          set -e
          echo "Preparing AEM instance"
          echo "AEM_PUBLISH_ACTIVE=false" >> .env
          mkdir -p aem/home/lib
          aws s3 cp --no-progress --only-show-errors s3://${{ secrets.AWS_S3_BUCKET_NAME }}/aem/on-prem/cq-quickstart-6.5.0.jar aem/home/lib/cq-quickstart-6.5.0.jar
          aws s3 cp --no-progress --only-show-errors s3://${{ secrets.AWS_S3_BUCKET_NAME }}/aem/on-prem/license.properties aem/home/lib/license.properties
          echo "Prepared AEM instance"
          echo "Launching AEM instance"
          sh aemw instance launch
          echo "Launched AEM instance"

      - name: Deploy ACM Package
        run: |
          PACKAGE_PATH=$(find ./aem/home/lib/acm -name "*.zip" | head -1)
          echo "Deploying ACM Package '$PACKAGE_PATH'"
          sh aemw pkg deploy --file "$PACKAGE_PATH"
          echo "Deployed ACM Package '$PACKAGE_PATH'"

      - name: Run Playwright Tests
        working-directory: ./test/e2e
        run: npx playwright test

      - name: Upload Playwright Report
        uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: playwright-report
          path: ./test/e2e/playwright-report/
          retention-days: 30

      - name: Upload AEM Logs
        uses: actions/upload-artifact@v4
        if: ${{ !cancelled() }}
        with:
          name: aem-log-error
          path: ./aem/home/var/instance/author/crx-quickstart/logs/error.log
          retention-days: 30